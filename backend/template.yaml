Resources:
  UserPoolclouddashboarduserpoolsmsRoleEA318399:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Condition:
              StringEquals:
                sts:ExternalId: BackendStackUserPoolclouddashboarduserpool053B8C94
            Effect: Allow
            Principal:
              Service: cognito-idp.amazonaws.com
        Version: "2012-10-17"
      Policies:
        - PolicyDocument:
            Statement:
              - Action: sns:Publish
                Effect: Allow
                Resource: "*"
            Version: "2012-10-17"
          PolicyName: sns-publish
    Metadata:
      aws:cdk:path: BackendStack/UserPool/cloud-dashboard-userpool/smsRole/Resource
  UserPoolclouddashboarduserpool8AB30D79:
    Type: AWS::Cognito::UserPool
    Properties:
      AccountRecoverySetting:
        RecoveryMechanisms:
          - Name: verified_phone_number
            Priority: 1
          - Name: verified_email
            Priority: 2
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: false
      AliasAttributes:
        - email
      AutoVerifiedAttributes:
        - email
      EmailVerificationMessage: The verification code to your new account is {####}
      EmailVerificationSubject: Verify your new account
      Schema:
        - Mutable: true
          Name: email
          Required: true
      SmsConfiguration:
        ExternalId: BackendStackUserPoolclouddashboarduserpool053B8C94
        SnsCallerArn:
          Fn::GetAtt:
            - UserPoolclouddashboarduserpoolsmsRoleEA318399
            - Arn
      SmsVerificationMessage: The verification code to your new account is {####}
      UserPoolName: cloud-dashboard-user-pool
      VerificationMessageTemplate:
        DefaultEmailOption: CONFIRM_WITH_CODE
        EmailMessage: The verification code to your new account is {####}
        EmailSubject: Verify your new account
        SmsMessage: The verification code to your new account is {####}
    Metadata:
      aws:cdk:path: BackendStack/UserPool/cloud-dashboard-userpool/Resource
  UserPoolclouddashboarduserpoolclientC8464415:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId:
        Ref: UserPoolclouddashboarduserpool8AB30D79
      AllowedOAuthFlows:
        - implicit
        - code
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthScopes:
        - profile
        - phone
        - email
        - openid
        - aws.cognito.signin.user.admin
      CallbackURLs:
        - https://example.com
      ClientName: cloud-dashboard-client
      SupportedIdentityProviders:
        - COGNITO
    Metadata:
      aws:cdk:path: BackendStack/UserPool/cloud-dashboard-userpool/client/Resource
  Databaseclouddashboardapps4A62326E:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: username
          KeyType: HASH
        - AttributeName: id
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: username
          AttributeType: S
        - AttributeName: id
          AttributeType: S
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: BackendStack/Database/cloud-dashboard-apps/Resource
  LambdaFunctionsHelloServiceRole9A132DE5:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: BackendStack/LambdaFunctions/Hello/ServiceRole/Resource
  LambdaFunctionsHelloServiceRoleDefaultPolicy74F6E82A:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - Databaseclouddashboardapps4A62326E
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: LambdaFunctionsHelloServiceRoleDefaultPolicy74F6E82A
      Roles:
        - Ref: LambdaFunctionsHelloServiceRole9A132DE5
    Metadata:
      aws:cdk:path: BackendStack/LambdaFunctions/Hello/ServiceRole/DefaultPolicy/Resource
  LambdaFunctionsHello24934EDB:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersebb067fa32f8f232a5bf37864d337df835fb0add856b577660db170716580622S3BucketA590F45F
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersebb067fa32f8f232a5bf37864d337df835fb0add856b577660db170716580622S3VersionKey8FDA7BC0
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersebb067fa32f8f232a5bf37864d337df835fb0add856b577660db170716580622S3VersionKey8FDA7BC0
      Handler: functions/hello.main
      Role:
        Fn::GetAtt:
          - LambdaFunctionsHelloServiceRole9A132DE5
          - Arn
      Runtime: nodejs12.x
      Environment:
        Variables:
          TABLE_NAME:
            Ref: Databaseclouddashboardapps4A62326E
    DependsOn:
      - LambdaFunctionsHelloServiceRoleDefaultPolicy74F6E82A
      - LambdaFunctionsHelloServiceRole9A132DE5
    Metadata:
      aws:cdk:path: BackendStack/LambdaFunctions/Hello/Resource
      aws:asset:path: /Users/musicqpee/github/cloud-dashboard/backend/lambda
      aws:asset:property: Code
  LambdaFunctionsCreateProjectServiceRoleE786CE0E:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: BackendStack/LambdaFunctions/CreateProject/ServiceRole/Resource
  LambdaFunctionsCreateProjectServiceRoleDefaultPolicyBD1B0858:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - Databaseclouddashboardapps4A62326E
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: LambdaFunctionsCreateProjectServiceRoleDefaultPolicyBD1B0858
      Roles:
        - Ref: LambdaFunctionsCreateProjectServiceRoleE786CE0E
    Metadata:
      aws:cdk:path: BackendStack/LambdaFunctions/CreateProject/ServiceRole/DefaultPolicy/Resource
  LambdaFunctionsCreateProject033D43EF:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersebb067fa32f8f232a5bf37864d337df835fb0add856b577660db170716580622S3BucketA590F45F
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersebb067fa32f8f232a5bf37864d337df835fb0add856b577660db170716580622S3VersionKey8FDA7BC0
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersebb067fa32f8f232a5bf37864d337df835fb0add856b577660db170716580622S3VersionKey8FDA7BC0
      Handler: functions/project.create
      Role:
        Fn::GetAtt:
          - LambdaFunctionsCreateProjectServiceRoleE786CE0E
          - Arn
      Runtime: nodejs12.x
      Environment:
        Variables:
          TABLE_NAME:
            Ref: Databaseclouddashboardapps4A62326E
    DependsOn:
      - LambdaFunctionsCreateProjectServiceRoleDefaultPolicyBD1B0858
      - LambdaFunctionsCreateProjectServiceRoleE786CE0E
    Metadata:
      aws:cdk:path: BackendStack/LambdaFunctions/CreateProject/Resource
      aws:asset:path: /Users/musicqpee/github/cloud-dashboard/backend/lambda
      aws:asset:property: Code
  LambdaFunctionsGetProjectsServiceRole82D36FA3:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: BackendStack/LambdaFunctions/GetProjects/ServiceRole/Resource
  LambdaFunctionsGetProjectsServiceRoleDefaultPolicy66B440CF:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - Databaseclouddashboardapps4A62326E
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: LambdaFunctionsGetProjectsServiceRoleDefaultPolicy66B440CF
      Roles:
        - Ref: LambdaFunctionsGetProjectsServiceRole82D36FA3
    Metadata:
      aws:cdk:path: BackendStack/LambdaFunctions/GetProjects/ServiceRole/DefaultPolicy/Resource
  LambdaFunctionsGetProjects40B705C1:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersebb067fa32f8f232a5bf37864d337df835fb0add856b577660db170716580622S3BucketA590F45F
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersebb067fa32f8f232a5bf37864d337df835fb0add856b577660db170716580622S3VersionKey8FDA7BC0
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersebb067fa32f8f232a5bf37864d337df835fb0add856b577660db170716580622S3VersionKey8FDA7BC0
      Handler: functions/project.get
      Role:
        Fn::GetAtt:
          - LambdaFunctionsGetProjectsServiceRole82D36FA3
          - Arn
      Runtime: nodejs12.x
      Environment:
        Variables:
          TABLE_NAME:
            Ref: Databaseclouddashboardapps4A62326E
    DependsOn:
      - LambdaFunctionsGetProjectsServiceRoleDefaultPolicy66B440CF
      - LambdaFunctionsGetProjectsServiceRole82D36FA3
    Metadata:
      aws:cdk:path: BackendStack/LambdaFunctions/GetProjects/Resource
      aws:asset:path: /Users/musicqpee/github/cloud-dashboard/backend/lambda
      aws:asset:property: Code
  LambdaFunctionsGetProjectByIdServiceRole8171E6ED:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: BackendStack/LambdaFunctions/GetProjectById/ServiceRole/Resource
  LambdaFunctionsGetProjectByIdServiceRoleDefaultPolicy92F074A2:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - Databaseclouddashboardapps4A62326E
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: LambdaFunctionsGetProjectByIdServiceRoleDefaultPolicy92F074A2
      Roles:
        - Ref: LambdaFunctionsGetProjectByIdServiceRole8171E6ED
    Metadata:
      aws:cdk:path: BackendStack/LambdaFunctions/GetProjectById/ServiceRole/DefaultPolicy/Resource
  LambdaFunctionsGetProjectById5287A6D7:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersebb067fa32f8f232a5bf37864d337df835fb0add856b577660db170716580622S3BucketA590F45F
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersebb067fa32f8f232a5bf37864d337df835fb0add856b577660db170716580622S3VersionKey8FDA7BC0
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersebb067fa32f8f232a5bf37864d337df835fb0add856b577660db170716580622S3VersionKey8FDA7BC0
      Handler: functions/project.getById
      Role:
        Fn::GetAtt:
          - LambdaFunctionsGetProjectByIdServiceRole8171E6ED
          - Arn
      Runtime: nodejs12.x
      Environment:
        Variables:
          TABLE_NAME:
            Ref: Databaseclouddashboardapps4A62326E
    DependsOn:
      - LambdaFunctionsGetProjectByIdServiceRoleDefaultPolicy92F074A2
      - LambdaFunctionsGetProjectByIdServiceRole8171E6ED
    Metadata:
      aws:cdk:path: BackendStack/LambdaFunctions/GetProjectById/Resource
      aws:asset:path: /Users/musicqpee/github/cloud-dashboard/backend/lambda
      aws:asset:property: Code
  Gatewayclouddashboardapi28E919CB:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: cloud-dashboard-api
    Metadata:
      aws:cdk:path: BackendStack/Gateway/cloud-dashboard-api/Resource
  GatewayclouddashboardapiCloudWatchRoleFDCF67DD:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
    Metadata:
      aws:cdk:path: BackendStack/Gateway/cloud-dashboard-api/CloudWatchRole/Resource
  GatewayclouddashboardapiAccount40BA2DF7:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn:
        Fn::GetAtt:
          - GatewayclouddashboardapiCloudWatchRoleFDCF67DD
          - Arn
    DependsOn:
      - Gatewayclouddashboardapi28E919CB
    Metadata:
      aws:cdk:path: BackendStack/Gateway/cloud-dashboard-api/Account
  GatewayclouddashboardapiDeployment9DF53C84cd8f34397001e0c8e9fa36487815d05f:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: Gatewayclouddashboardapi28E919CB
      Description: Automatically created by the RestApi construct
    DependsOn:
      - GatewayclouddashboardapiANY124F647F
      - GatewayclouddashboardapiOPTIONSC4804E72
      - GatewayclouddashboardapiprojectsprojectIdDELETEA33BF838
      - GatewayclouddashboardapiprojectsprojectIdGET8CC3C45F
      - GatewayclouddashboardapiprojectsprojectIdOPTIONSA2ACD20F
      - GatewayclouddashboardapiprojectsprojectIdPUTEF250BA5
      - GatewayclouddashboardapiprojectsprojectId13F84DA1
      - GatewayclouddashboardapiprojectsGETC8E5FD04
      - GatewayclouddashboardapiprojectsOPTIONS6FF46935
      - GatewayclouddashboardapiprojectsPOST3451A7F0
      - GatewayclouddashboardapiprojectsB814A665
    Metadata:
      aws:cdk:path: BackendStack/Gateway/cloud-dashboard-api/Deployment/Resource
  GatewayclouddashboardapiDeploymentStageprod9A3F2E8E:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId:
        Ref: Gatewayclouddashboardapi28E919CB
      DeploymentId:
        Ref: GatewayclouddashboardapiDeployment9DF53C84cd8f34397001e0c8e9fa36487815d05f
      StageName: prod
    Metadata:
      aws:cdk:path: BackendStack/Gateway/cloud-dashboard-api/DeploymentStage.prod/Resource
  GatewayclouddashboardapiOPTIONSC4804E72:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Fn::GetAtt:
          - Gatewayclouddashboardapi28E919CB
          - RootResourceId
      RestApiId:
        Ref: Gatewayclouddashboardapi28E919CB
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: BackendStack/Gateway/cloud-dashboard-api/Default/OPTIONS/Resource
  GatewayclouddashboardapiANY124F647F:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: ANY
      ResourceId:
        Fn::GetAtt:
          - Gatewayclouddashboardapi28E919CB
          - RootResourceId
      RestApiId:
        Ref: Gatewayclouddashboardapi28E919CB
      AuthorizationType: NONE
      Integration:
        Type: MOCK
    Metadata:
      aws:cdk:path: BackendStack/Gateway/cloud-dashboard-api/Default/ANY/Resource
  GatewayclouddashboardapiprojectsB814A665:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - Gatewayclouddashboardapi28E919CB
          - RootResourceId
      PathPart: projects
      RestApiId:
        Ref: Gatewayclouddashboardapi28E919CB
    Metadata:
      aws:cdk:path: BackendStack/Gateway/cloud-dashboard-api/Default/projects/Resource
  GatewayclouddashboardapiprojectsOPTIONS6FF46935:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: GatewayclouddashboardapiprojectsB814A665
      RestApiId:
        Ref: Gatewayclouddashboardapi28E919CB
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: BackendStack/Gateway/cloud-dashboard-api/Default/projects/OPTIONS/Resource
  GatewayclouddashboardapiprojectsGETApiPermissionBackendStackGatewayclouddashboardapi53A67D4EGETprojects678DB002:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - LambdaFunctionsGetProjects40B705C1
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: Gatewayclouddashboardapi28E919CB
            - /
            - Ref: GatewayclouddashboardapiDeploymentStageprod9A3F2E8E
            - /GET/projects
    Metadata:
      aws:cdk:path: BackendStack/Gateway/cloud-dashboard-api/Default/projects/GET/ApiPermission.BackendStackGatewayclouddashboardapi53A67D4E.GET..projects
  GatewayclouddashboardapiprojectsGETApiPermissionTestBackendStackGatewayclouddashboardapi53A67D4EGETprojectsA98B2DF9:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - LambdaFunctionsGetProjects40B705C1
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: Gatewayclouddashboardapi28E919CB
            - /test-invoke-stage/GET/projects
    Metadata:
      aws:cdk:path: BackendStack/Gateway/cloud-dashboard-api/Default/projects/GET/ApiPermission.Test.BackendStackGatewayclouddashboardapi53A67D4E.GET..projects
  GatewayclouddashboardapiprojectsGETC8E5FD04:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: GatewayclouddashboardapiprojectsB814A665
      RestApiId:
        Ref: Gatewayclouddashboardapi28E919CB
      AuthorizationType: AWS_IAM
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - LambdaFunctionsGetProjects40B705C1
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: BackendStack/Gateway/cloud-dashboard-api/Default/projects/GET/Resource
  GatewayclouddashboardapiprojectsPOSTApiPermissionBackendStackGatewayclouddashboardapi53A67D4EPOSTprojectsE5E604D9:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - LambdaFunctionsCreateProject033D43EF
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: Gatewayclouddashboardapi28E919CB
            - /
            - Ref: GatewayclouddashboardapiDeploymentStageprod9A3F2E8E
            - /POST/projects
    Metadata:
      aws:cdk:path: BackendStack/Gateway/cloud-dashboard-api/Default/projects/POST/ApiPermission.BackendStackGatewayclouddashboardapi53A67D4E.POST..projects
  GatewayclouddashboardapiprojectsPOSTApiPermissionTestBackendStackGatewayclouddashboardapi53A67D4EPOSTprojectsD6AE7DA1:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - LambdaFunctionsCreateProject033D43EF
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: Gatewayclouddashboardapi28E919CB
            - /test-invoke-stage/POST/projects
    Metadata:
      aws:cdk:path: BackendStack/Gateway/cloud-dashboard-api/Default/projects/POST/ApiPermission.Test.BackendStackGatewayclouddashboardapi53A67D4E.POST..projects
  GatewayclouddashboardapiprojectsPOST3451A7F0:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: GatewayclouddashboardapiprojectsB814A665
      RestApiId:
        Ref: Gatewayclouddashboardapi28E919CB
      AuthorizationType: AWS_IAM
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - LambdaFunctionsCreateProject033D43EF
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: BackendStack/Gateway/cloud-dashboard-api/Default/projects/POST/Resource
  GatewayclouddashboardapiprojectsprojectId13F84DA1:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: GatewayclouddashboardapiprojectsB814A665
      PathPart: "{projectId}"
      RestApiId:
        Ref: Gatewayclouddashboardapi28E919CB
    Metadata:
      aws:cdk:path: BackendStack/Gateway/cloud-dashboard-api/Default/projects/{projectId}/Resource
  GatewayclouddashboardapiprojectsprojectIdOPTIONSA2ACD20F:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: GatewayclouddashboardapiprojectsprojectId13F84DA1
      RestApiId:
        Ref: Gatewayclouddashboardapi28E919CB
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: BackendStack/Gateway/cloud-dashboard-api/Default/projects/{projectId}/OPTIONS/Resource
  GatewayclouddashboardapiprojectsprojectIdGETApiPermissionBackendStackGatewayclouddashboardapi53A67D4EGETprojectsprojectId75CBB360:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - LambdaFunctionsGetProjectById5287A6D7
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: Gatewayclouddashboardapi28E919CB
            - /
            - Ref: GatewayclouddashboardapiDeploymentStageprod9A3F2E8E
            - /GET/projects/*
    Metadata:
      aws:cdk:path: BackendStack/Gateway/cloud-dashboard-api/Default/projects/{projectId}/GET/ApiPermission.BackendStackGatewayclouddashboardapi53A67D4E.GET..projects.{projectId}
  GatewayclouddashboardapiprojectsprojectIdGETApiPermissionTestBackendStackGatewayclouddashboardapi53A67D4EGETprojectsprojectIdE339D798:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - LambdaFunctionsGetProjectById5287A6D7
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: Gatewayclouddashboardapi28E919CB
            - /test-invoke-stage/GET/projects/*
    Metadata:
      aws:cdk:path: BackendStack/Gateway/cloud-dashboard-api/Default/projects/{projectId}/GET/ApiPermission.Test.BackendStackGatewayclouddashboardapi53A67D4E.GET..projects.{projectId}
  GatewayclouddashboardapiprojectsprojectIdGET8CC3C45F:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: GatewayclouddashboardapiprojectsprojectId13F84DA1
      RestApiId:
        Ref: Gatewayclouddashboardapi28E919CB
      AuthorizationType: AWS_IAM
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - LambdaFunctionsGetProjectById5287A6D7
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: BackendStack/Gateway/cloud-dashboard-api/Default/projects/{projectId}/GET/Resource
  GatewayclouddashboardapiprojectsprojectIdPUTEF250BA5:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: PUT
      ResourceId:
        Ref: GatewayclouddashboardapiprojectsprojectId13F84DA1
      RestApiId:
        Ref: Gatewayclouddashboardapi28E919CB
      AuthorizationType: NONE
      Integration:
        Type: MOCK
    Metadata:
      aws:cdk:path: BackendStack/Gateway/cloud-dashboard-api/Default/projects/{projectId}/PUT/Resource
  GatewayclouddashboardapiprojectsprojectIdDELETEA33BF838:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: DELETE
      ResourceId:
        Ref: GatewayclouddashboardapiprojectsprojectId13F84DA1
      RestApiId:
        Ref: Gatewayclouddashboardapi28E919CB
      AuthorizationType: NONE
      Integration:
        Type: MOCK
    Metadata:
      aws:cdk:path: BackendStack/Gateway/cloud-dashboard-api/Default/projects/{projectId}/DELETE/Resource
  Gatewayhello270BBC94:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: hello
    Metadata:
      aws:cdk:path: BackendStack/Gateway/hello/Resource
  GatewayhelloCloudWatchRoleD6B1D3E5:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
    Metadata:
      aws:cdk:path: BackendStack/Gateway/hello/CloudWatchRole/Resource
  GatewayhelloAccount5145D05C:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn:
        Fn::GetAtt:
          - GatewayhelloCloudWatchRoleD6B1D3E5
          - Arn
    DependsOn:
      - Gatewayhello270BBC94
    Metadata:
      aws:cdk:path: BackendStack/Gateway/hello/Account
  GatewayhelloDeployment12F5DE0E06d0cc5bb8be92afe7305e379132cf59:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: Gatewayhello270BBC94
      Description: Automatically created by the RestApi construct
    DependsOn:
      - GatewayhelloproxyANY577AF459
      - GatewayhelloproxyB07E0BCE
      - GatewayhelloANY5BB5497B
    Metadata:
      aws:cdk:path: BackendStack/Gateway/hello/Deployment/Resource
  GatewayhelloDeploymentStageprod042FD68F:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId:
        Ref: Gatewayhello270BBC94
      DeploymentId:
        Ref: GatewayhelloDeployment12F5DE0E06d0cc5bb8be92afe7305e379132cf59
      StageName: prod
    Metadata:
      aws:cdk:path: BackendStack/Gateway/hello/DeploymentStage.prod/Resource
  GatewayhelloproxyB07E0BCE:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - Gatewayhello270BBC94
          - RootResourceId
      PathPart: "{proxy+}"
      RestApiId:
        Ref: Gatewayhello270BBC94
    Metadata:
      aws:cdk:path: BackendStack/Gateway/hello/Default/{proxy+}/Resource
  GatewayhelloproxyANYApiPermissionBackendStackGatewayhelloC14EA33BANYproxyAA2593B3:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - LambdaFunctionsHello24934EDB
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: Gatewayhello270BBC94
            - /
            - Ref: GatewayhelloDeploymentStageprod042FD68F
            - /*/*
    Metadata:
      aws:cdk:path: BackendStack/Gateway/hello/Default/{proxy+}/ANY/ApiPermission.BackendStackGatewayhelloC14EA33B.ANY..{proxy+}
  GatewayhelloproxyANYApiPermissionTestBackendStackGatewayhelloC14EA33BANYproxy7A478907:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - LambdaFunctionsHello24934EDB
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: Gatewayhello270BBC94
            - /test-invoke-stage/*/*
    Metadata:
      aws:cdk:path: BackendStack/Gateway/hello/Default/{proxy+}/ANY/ApiPermission.Test.BackendStackGatewayhelloC14EA33B.ANY..{proxy+}
  GatewayhelloproxyANY577AF459:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: ANY
      ResourceId:
        Ref: GatewayhelloproxyB07E0BCE
      RestApiId:
        Ref: Gatewayhello270BBC94
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - LambdaFunctionsHello24934EDB
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: BackendStack/Gateway/hello/Default/{proxy+}/ANY/Resource
  GatewayhelloANYApiPermissionBackendStackGatewayhelloC14EA33BANY448195FD:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - LambdaFunctionsHello24934EDB
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: Gatewayhello270BBC94
            - /
            - Ref: GatewayhelloDeploymentStageprod042FD68F
            - /*/
    Metadata:
      aws:cdk:path: BackendStack/Gateway/hello/Default/ANY/ApiPermission.BackendStackGatewayhelloC14EA33B.ANY..
  GatewayhelloANYApiPermissionTestBackendStackGatewayhelloC14EA33BANY419CFA94:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - LambdaFunctionsHello24934EDB
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: Gatewayhello270BBC94
            - /test-invoke-stage/*/
    Metadata:
      aws:cdk:path: BackendStack/Gateway/hello/Default/ANY/ApiPermission.Test.BackendStackGatewayhelloC14EA33B.ANY..
  GatewayhelloANY5BB5497B:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: ANY
      ResourceId:
        Fn::GetAtt:
          - Gatewayhello270BBC94
          - RootResourceId
      RestApiId:
        Ref: Gatewayhello270BBC94
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - LambdaFunctionsHello24934EDB
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: BackendStack/Gateway/hello/Default/ANY/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Modules: aws-cdk=1.51.0,@aws-cdk/assets=1.51.0,@aws-cdk/aws-apigateway=1.51.0,@aws-cdk/aws-applicationautoscaling=1.51.0,@aws-cdk/aws-autoscaling-common=1.51.0,@aws-cdk/aws-cloudwatch=1.51.0,@aws-cdk/aws-cognito=1.51.0,@aws-cdk/aws-dynamodb=1.51.0,@aws-cdk/aws-ec2=1.51.0,@aws-cdk/aws-events=1.51.0,@aws-cdk/aws-iam=1.51.0,@aws-cdk/aws-kms=1.51.0,@aws-cdk/aws-lambda=1.51.0,@aws-cdk/aws-logs=1.51.0,@aws-cdk/aws-s3=1.51.0,@aws-cdk/aws-s3-assets=1.51.0,@aws-cdk/aws-sqs=1.51.0,@aws-cdk/aws-ssm=1.51.0,@aws-cdk/cloud-assembly-schema=1.51.0,@aws-cdk/core=1.51.0,@aws-cdk/custom-resources=1.51.0,@aws-cdk/cx-api=1.51.0,@aws-cdk/region-info=1.51.0,jsii-runtime=node.js/v12.18.2
    Condition: CDKMetadataAvailable
Parameters:
  AssetParametersebb067fa32f8f232a5bf37864d337df835fb0add856b577660db170716580622S3BucketA590F45F:
    Type: String
    Description: S3 bucket for asset "ebb067fa32f8f232a5bf37864d337df835fb0add856b577660db170716580622"
  AssetParametersebb067fa32f8f232a5bf37864d337df835fb0add856b577660db170716580622S3VersionKey8FDA7BC0:
    Type: String
    Description: S3 key for asset version "ebb067fa32f8f232a5bf37864d337df835fb0add856b577660db170716580622"
  AssetParametersebb067fa32f8f232a5bf37864d337df835fb0add856b577660db170716580622ArtifactHash416945CD:
    Type: String
    Description: Artifact hash for asset "ebb067fa32f8f232a5bf37864d337df835fb0add856b577660db170716580622"
Outputs:
  GatewayclouddashboardapiEndpoint257740C9:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: Gatewayclouddashboardapi28E919CB
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: GatewayclouddashboardapiDeploymentStageprod9A3F2E8E
          - /
  GatewayhelloEndpoint0AD6BE83:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: Gatewayhello270BBC94
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: GatewayhelloDeploymentStageprod042FD68F
          - /
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

