{"version":3,"sources":["components/Guard/Guard.tsx","components/Spinner/Spinner.tsx","components/Launch/Launch.tsx","shared/go.ts","store/index.ts","store/RXStore.ts","services/auth.service.ts","shared/useCurrentUser.ts","shared/qs.ts","shared/useProjectId.ts","shared/noop.ts","services/projects.service.ts","components/Button/Button.tsx","components/Avatar/Avatar.tsx","components/Logo/Logo.tsx","config.ts","shared/http.ts","components/AppBar/AppBar.tsx","components/AppBar/AppBar.service.ts","shared/classnames.ts","components/Card/CardFooter.tsx","components/Card/Card.tsx","components/Card/Card.service.ts","components/DetectionArea/DetectionArea.tsx","components/DetectionArea/DetectionArea.service.ts","components/TextInput/TextInput.tsx","components/LoginForm/LoginForm.tsx","components/APIWidget/APIWidget.tsx","components/ProjectInfo/ProjectInfo.tsx","components/ResourceWidget/ResourceWidget.tsx","components/SQLWidget/SQLWidget.tsx","pages/Dashboard/WidgetSwitcher.tsx","pages/Dashboard/Dashboard.tsx","pages/Dashboard/Dashboard.service.ts","pages/Login/Login.tsx","components/Alert/Alert.tsx","pages/NewProject/NewProject.tsx","App.tsx","shared/useAuthConfig.ts","serviceWorker.ts","index.tsx"],"names":["Guard","redirectTo","guard","children","rest","useState","isRedirecting","setRedirectStatus","canAccess","setAccess","useEffect","sub","res","Promise","then","s","catch","e","finally","subscribe","unsubscribe","render","location","to","pathname","state","from","Spinner","className","cls","join","style","rotate","animationDuration","animationTimingFunction","animationIterationCount","animationName","Launch","Err","console","error","go","promise","storeInstance","initialState","actions$","BehaviorSubject","state$","pipe","scan","action","shareReplay","createReducer","fn","next","selectCreator","predict","defaultValue","undefined","Error","mapFn","attr","attrs","split","p","shift","map","distinctUntilChanged","clear","field","ns","Reflect","deleteProperty","select","createStore","group","log","groupEnd","store","Actions","setUserInfo","userInfo","setSession","session","username","password","a","Auth","signIn","currentUserInfo","currentSession","signOut","email","signUp","attributes","code","confirmSignUp","Auth$","getSession","switchMap","of","getUserInfo","tap","data","useCurrentUser","loading","setLoading","user","setUser","qs","q","startsWith","substr","reduce","acc","cur","key","val","useProjectId","projects","history","useHistory","useLocation","match","useRouteMatch","search","projectId","defaultId","id","path","push","WidgetTypes","noop","Button","primary","block","disabled","onClick","defaultCls","isDisabled","featureCls","Avatar","visible","setVisible","onLogout","Logo","reverse","CONFIG","REGION","USER_POOL_ID","APP_CLIENT_ID","URL","ENV","errorHandler","errorHandlerWithDefaultValue","genURL","env","base","href","request","opt","token$","getIdToken","getJwtToken","take","opt$","token","headers","restOpts","Headers","append","url","Authorization","fetch","status","json","throwError","username$","pluck","Projects$","loading$","get","length","Items","set","catchError","getById","EMPTY","project","find","resources","Item","setById","newProjects","create","projectName","JSON","stringify","body","method","opts","appendProject","updateById","AppBar","setProjects","useProjects","isNewProjectPath","isLoggedIn","value","onChange","target","classnames","args","Array","r","composeCls","result","restArgs","isArray","c","filter","Boolean","Object","entries","CardFooter","link","rel","Placeholder","Card","React","memo","title","footer","isDragging","collapse","onPositionChange","onMouseDown","ref","useRef","position","setPosition","useLayoutEffect","current","move","el","x","offsetWidth","y","offsetHeight","left","clientX","top","clientY","document","addEventListener","removeEventListener","usePosition","name","DetectionArea","index","active","useMemo","offsetTop","offsetLeft","width","height","useActive","Type","TextInput","label","props","APIWidget","edit","source","ProjectInfo","Date","createdAt","toDateString","ResourceWidget","SQLWidget","WidgetSwitcher","type","View","Resource","API","SQL","Dashboard","cb","useLoadingProjects","setProject","useProject","setDragging","operateItemIndex","setOperateItemIndex","targetIndex","setTargetIndex","setResources","useResources","setEdit","cancelDragging","useCallback","newResources","list","srcIndex","listCopy","slice","srcCol","srcIdx","targetCol","targetIdx","col","item","splice","srcCols","targetCols","exchange","onIndexChange","onDataChange","resource","colIndex","b","config","LoginForm","Login","setType","setUsername","setEmail","setPassword","isSubmitting","setSubmitting","setCode","onSignIn","alert","onSignUp","isOk","ConfirmSingUp","onConfirmed","onSubmit","preventDefault","Register","placeholder","Alert","NewProject","setProjectName","setError","errMsg","setErrMsg","trim","msg","goBack","App","Amplify","configure","mandatorySignIn","region","userPoolId","userPoolWebClientId","exact","window","hostname","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.c914b9ca.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {Redirect, Route, RouteProps} from 'react-router-dom'\nimport {Observable, Subscription} from 'rxjs'\nimport {CProps} from '../../types'\n\ninterface GuardProps extends RouteProps {\n  redirectTo?: string\n  guard: () => boolean | Observable<boolean> | Promise<boolean>\n}\n\nexport const Guard = ({\n  redirectTo = '/login',\n  guard,\n  children,\n  ...rest\n}: CProps<GuardProps>) => {\n  const [isRedirecting, setRedirectStatus] = useState(true)\n  const [canAccess, setAccess] = useState(false)\n\n  useEffect(() => {\n    const res = guard()\n    let sub: Subscription\n\n    if (typeof res === 'boolean') {\n      setAccess(res)\n      setRedirectStatus(false)\n    } else if (res instanceof Promise) {\n      res\n        .then(s => setAccess(s))\n        .catch(e => setAccess(false))\n        .finally(() => setRedirectStatus(false))\n    } else {\n      sub = res.subscribe(\n        s => {\n          setAccess(s)\n        },\n        () => setAccess(false),\n        () => setRedirectStatus(false)\n      )\n    }\n\n    return () => {\n      if (sub) {\n        sub.unsubscribe()\n      }\n    }\n  }, [guard])\n\n  if (isRedirecting) {\n    return null\n  }\n\n  return (\n    <Route\n      {...rest}\n      render={({location}) =>\n        canAccess ? (\n          children\n        ) : (\n          <Redirect to={{pathname: redirectTo, state: {from: location}}} />\n        )\n      }\n    />\n  )\n}\n","import React from 'react'\nimport {FaSpinner} from 'react-icons/fa'\nimport {CProps} from '../../types'\n\ninterface SpinnerProps {}\n\nexport const Spinner = ({className = ''}: CProps<SpinnerProps>) => {\n  const cls = ['inline-flex', className].join(' ')\n\n  return (\n    <>\n      <span className={cls} style={style.rotate}>\n        <FaSpinner className=\"w-full h-full\" />\n      </span>\n\n      <style>{`\n      @keyframes Spinner {\n        0 {\n          transform: rotate(0);\n        }\n        25% {\n          transform: rotate(80deg);\n        }\n        50% {\n          transform: rotate(160deg);\n        }\n        75% {\n          transform: rotate(240deg);\n        }\n        100% {\n          transform: rotate(360deg);\n        }\n      }\n      `}</style>\n    </>\n  )\n}\n\nconst style = {\n  rotate: {\n    animationDuration: '1s',\n    animationTimingFunction: 'linear',\n    animationIterationCount: 'infinite',\n    animationName: 'Spinner'\n  }\n}\n","import React from 'react'\nimport {Spinner} from '../Spinner'\n\nexport const Launch = () => {\n  return (\n    <div className=\"flex justify-center items-center h-full w-full\">\n      <Spinner className=\"w-20 h-20\" />\n    </div>\n  )\n}\n","export class Err {\n  constructor(public e: any) {\n    console.error(e)\n  }\n}\n\nexport function go<T>(promise: Promise<T>): Promise<T | Err> {\n  return promise.catch(e => new Err(e))\n}\n","import {createStore} from './RXStore'\n\nconst storeInstance = createStore()\n\nstoreInstance.state$.subscribe(state => {\n  console.group('Store')\n  console.log(state)\n  console.groupEnd()\n})\n\nexport const store = storeInstance\n","import {BehaviorSubject, Observable} from 'rxjs'\nimport {distinctUntilChanged, map, scan, shareReplay} from 'rxjs/operators'\n\nexport type ReducerFn<S> = (s: S) => S\n\ntype State = {[key: string]: any}\ntype MapFn = <T, R>(s: T) => R | undefined\n\nexport function createStore(initialState: State = {}) {\n  const actions$ = new BehaviorSubject<ReducerFn<any>>(s => s)\n\n  const state$ = actions$.pipe(\n    scan((state, action) => action(state), initialState),\n    shareReplay(1)\n  )\n\n  const createReducer = <S extends State>(fn: ReducerFn<S>) => {\n    actions$.next(fn)\n  }\n\n  const selectCreator = (state$: Observable<State>) => <S>(\n    predict: string | MapFn,\n    defaultValue?: S\n  ): Observable<S> => {\n    // eslint-disable-next-line\n    if (predict == undefined) {\n      throw new Error(\"missing 'predict' parameter in select' method!\")\n    }\n\n    let mapFn = predict as MapFn\n\n    if (typeof predict === 'string') {\n      // @ts-ignore\n      mapFn = (state: State): S | undefined => {\n        const attrs = predict.split('.')\n        let p = state\n        let attr\n\n        while (p !== null && (attr = attrs.shift()) !== undefined) {\n          p = p[attr]\n\n          if (p === undefined) {\n            return defaultValue\n          }\n        }\n\n        return p as S\n      }\n    }\n\n    // @ts-ignore\n    return state$.pipe(map(mapFn), distinctUntilChanged())\n  }\n\n  const clear = (field?: string) => {\n    createReducer(state => {\n      const ns = {...state}\n\n      if (field) {\n        Reflect.deleteProperty(ns, field)\n        return ns\n      }\n\n      return initialState\n    })\n  }\n\n  return {\n    state$,\n    select: selectCreator(state$),\n    createReducer,\n    clear\n  }\n}\n","import {CognitoUserSession} from 'amazon-cognito-identity-js'\nimport {Auth} from 'aws-amplify'\nimport {from, of} from 'rxjs'\nimport {switchMap, tap} from 'rxjs/operators'\nimport {Err, go} from '../shared/go'\nimport {store} from '../store'\n\nconst Actions = {\n  userInfo: 'userInfo',\n  session: 'session'\n}\n\ninterface IUserInfo {\n  id?: string\n  username: string\n  attributes: {\n    email?: string\n  }\n}\n\nexport type UserInfo = IUserInfo | null\n\nfunction getUserInfo() {\n  return store.select<UserInfo>(Actions.userInfo, null).pipe(\n    switchMap(userInfo =>\n      userInfo === null\n        ? from(Auth.currentUserInfo()).pipe(\n            tap(data => {\n              if (data !== null) {\n                setUserInfo(data)\n              }\n            })\n          )\n        : of(userInfo)\n    )\n  )\n}\n\nfunction setUserInfo(userInfo: UserInfo) {\n  store.createReducer(state => ({\n    ...state,\n    [Actions.userInfo]: userInfo\n  }))\n}\n\nfunction getSession() {\n  return store.select<CognitoUserSession>(Actions.session).pipe(\n    switchMap(session =>\n      session\n        ? of(session)\n        : from(\n            Auth.currentSession().then(session => {\n              if (session) {\n                setSession(session)\n              }\n              return session\n            })\n          )\n    )\n  )\n}\n\nfunction setSession(session: CognitoUserSession) {\n  store.createReducer(state => ({\n    ...state,\n    [Actions.session]: session\n  }))\n}\n\nasync function signIn(username: string, password: string): Promise<UserInfo> {\n  const res = await go(\n    Auth.signIn({\n      username,\n      password\n    })\n  )\n\n  if (res instanceof Err) {\n    console.error('Login failed.\\n', res.e)\n\n    setUserInfo(null)\n\n    return null\n  }\n\n  const userInfo = await Auth.currentUserInfo()\n  const session = await Auth.currentSession()\n\n  setUserInfo(userInfo)\n  setSession(session)\n\n  return userInfo\n}\n\nasync function signOut(): Promise<boolean> {\n  const res = await go(Auth.signOut())\n\n  if (res instanceof Err) {\n    console.error('Logout failed.\\n', res.e)\n\n    return false\n  }\n\n  setUserInfo(null)\n\n  return true\n}\n\nasync function signUp(\n  username: string,\n  password: string,\n  email: string\n): Promise<boolean> {\n  const res = await go(\n    Auth.signUp({\n      username,\n      password,\n      attributes: {\n        email: email\n      }\n    })\n  )\n\n  if (res instanceof Err) {\n    console.error('Sign up failed.\\n', res.e)\n\n    return false\n  }\n\n  return true\n}\n\nasync function confirmSignUp(username: string, code: string): Promise<boolean> {\n  const res = await go(Auth.confirmSignUp(username, code))\n\n  if (res instanceof Err) {\n    console.error('Confirmed failed.\\n', res.e)\n\n    return false\n  }\n\n  return true\n}\n\nexport const Auth$ = {\n  getSession,\n  getUserInfo,\n  signIn,\n  signUp,\n  signOut,\n  confirmSignUp\n}\n","import {useEffect, useState} from 'react'\nimport {Auth$, UserInfo} from '../services/auth.service'\n\nexport function useCurrentUser() {\n  const [loading, setLoading] = useState(true)\n  const [user, setUser] = useState<UserInfo>(null)\n\n  useEffect(() => {\n    const sub = Auth$.getUserInfo().subscribe(userInfo => {\n      setUser(userInfo)\n      setLoading(false)\n    })\n\n    return () => sub.unsubscribe()\n  }, [])\n\n  return {loading, user}\n}\n","export function qs<T extends {[key: string]: string}>(q: string): T {\n  if (q.startsWith('?')) {\n    q = q.substr(1)\n  }\n\n  return q.split('&').reduce((acc, cur) => {\n    const [key, val] = cur.split('=')\n\n    return {...acc, [key]: val}\n  }, {} as T)\n}\n","import {useEffect} from 'react'\nimport {useHistory, useLocation, useRouteMatch} from 'react-router-dom'\nimport {Project} from '../services/projects.service'\nimport {qs} from './qs'\n\nexport function useProjectId(projects: Project[] = []) {\n  const history = useHistory()\n  const location = useLocation()\n  const match = useRouteMatch()\n  const {search} = location\n  const projectId = qs(search).projectId\n  const defaultId = projects[0]?.id || ''\n\n  useEffect(() => {\n    if (\n      (match.path === '/dashboard' && !projectId) ||\n      projectId === 'undefined'\n    ) {\n      const defaultId = projects[0]?.id\n\n      if (defaultId) {\n        history.push('/dashboard?projectId=' + defaultId)\n      }\n    }\n  }, [projectId, projects])\n\n  return projectId || defaultId\n}\n","export const noop = () => {}\n","import {useEffect, useState} from 'react'\nimport {BehaviorSubject, EMPTY, of} from 'rxjs'\nimport {catchError, map, pluck, switchMap, take, tap} from 'rxjs/operators'\nimport {\n  errorHandler,\n  errorHandlerWithDefaultValue,\n  request\n} from '../shared/http'\nimport {store} from '../store'\nimport {Auth$} from './auth.service'\n\nexport enum WidgetTypes {\n  Resource,\n  API,\n  SQL,\n  ProjectInfo,\n  News,\n  Status\n}\n\nexport interface WidgetConfig {\n  link?: string\n  name?: string\n}\n\nexport interface Widget {\n  id: string\n  type: WidgetTypes\n  title: string\n  config?: WidgetConfig\n  data: {[key: string]: any}\n}\n\nexport type WidgetsLayout = Array<Widget[]>\n\nexport interface Project {\n  createdAt: string\n  id: string\n  projectName: string\n  resources: WidgetsLayout\n  username: string\n}\n\nconst Actions = {\n  Projects: 'Projects'\n}\n\nconst username$ = Auth$.getUserInfo().pipe(pluck('username'))\n\nfunction createProject(projectName: string) {\n  return username$.pipe(\n    take(1),\n    map(username => JSON.stringify({username, projectName})),\n    map(body => ({method: 'POST', body} as RequestInit)),\n    switchMap(opts => request('projects', opts)),\n    tap(project => appendProject(project)),\n    catchError(errorHandler)\n  )\n}\n\nexport const Projects$ = {\n  loading$: new BehaviorSubject(false),\n  get: getProjects,\n  getById: getProjectById,\n  setById,\n  set: setProjects,\n  create: createProject,\n  updateById: updateProjectResourcesById\n}\n\nfunction appendProject(project: Project) {\n  store.createReducer(state => {\n    const projects = state[Actions.Projects] || []\n    const newProjects = [...projects, project]\n\n    return {\n      ...state,\n      [Actions.Projects]: newProjects\n    }\n  })\n}\n\nfunction getProjects() {\n  Projects$.loading$.next(true)\n  return store.select(Actions.Projects, []).pipe(\n    switchMap(projects =>\n      projects.length > 0\n        ? of(projects)\n        : request(`projects`).pipe(\n            map(res => res.Items),\n            tap(projects => {\n              if (projects && projects.length > 0) {\n                Projects$.set(projects)\n              }\n            }),\n            catchError(errorHandlerWithDefaultValue([]))\n          )\n    ),\n    tap(() => Projects$.loading$.next(false))\n  )\n}\n\nfunction setProjects(projects: Project[]) {\n  store.createReducer(state => ({\n    ...state,\n    [Actions.Projects]: projects\n  }))\n}\n\nfunction getProjectById(id: string) {\n  if (!id) {\n    return EMPTY\n  }\n\n  const defaultValue = {}\n\n  return store.select(Actions.Projects, [] as Project[]).pipe(\n    switchMap(projects => {\n      const project = projects.find(project => project.id === id)\n\n      if (projects.length > 0 && project && project.resources) {\n        return of(project)\n      }\n\n      Projects$.loading$.next(true)\n      return request(`projects/${id}`).pipe(\n        map(res => res.Item),\n        tap(project => {\n          if (project) {\n            Projects$.setById(id, project)\n          }\n          Projects$.loading$.next(false)\n        }),\n        catchError(errorHandlerWithDefaultValue(defaultValue))\n      )\n    })\n  )\n}\n\nfunction setById(id: string, project: Project) {\n  store.createReducer(state => {\n    const projects: Project[] = state[Actions.Projects] || []\n    const newProjects = projects.map(p => {\n      if (p.id === id) {\n        return project\n      }\n      return p\n    })\n\n    return {\n      ...state,\n      [Actions.Projects]: newProjects\n    }\n  })\n}\n\nfunction updateProjectResourcesById(id: string, resources: WidgetsLayout) {\n  if (!id) {\n    return EMPTY\n  }\n\n  return request(`projects/${id}`, {\n    method: 'PUT',\n    body: JSON.stringify(resources)\n  }).pipe(\n    tap(res => {\n      Projects$.getById(id)\n        .pipe(\n          take(1),\n          map(project => ({...project, resources})),\n          tap(project => Projects$.setById(id, project))\n        )\n        .subscribe()\n    }),\n    catchError(errorHandler)\n  )\n}\n\nexport function useLoadingProjects() {\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    const sub = Projects$.loading$.subscribe(loading => setLoading(loading))\n\n    return () => sub.unsubscribe()\n  }, [])\n\n  return loading\n}\n","import React, {ButtonHTMLAttributes, MouseEventHandler} from 'react'\nimport {noop} from '../../shared/noop'\nimport {CProps} from '../../types'\nimport {Spinner} from '../Spinner'\n\ninterface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n  primary?: boolean\n  block?: boolean\n  loading?: boolean\n  disabled?: boolean\n  onClick?: MouseEventHandler<HTMLButtonElement>\n}\n\nexport const Button = ({\n  primary = false,\n  block = false,\n  className = '',\n  loading = false,\n  disabled = false,\n  onClick = noop,\n  children,\n  ...rest\n}: CProps<ButtonProps>) => {\n  const defaultCls = [\n    'px-3',\n    'py-2',\n    'rounded',\n    'transition-colors',\n    'duration-300',\n    'ease-in-out',\n    'focus:outline-none'\n  ]\n\n  if (block) {\n    defaultCls.push('w-full')\n  }\n\n  const isDisabled = disabled || loading\n\n  const featureCls = primary\n    ? [\n        'text-white',\n        isDisabled ? 'bg-gray-400' : 'bg-blue-500',\n        isDisabled ? '' : 'hover:bg-blue-800'\n      ]\n    : [\n        isDisabled ? 'text-gray-400' : 'text-blue-500',\n        isDisabled ? 'border-gray-400' : 'border-blue-500',\n        isDisabled ? '' : 'hover:border-blue-800',\n        isDisabled ? '' : 'hover:text-blue-800'\n      ]\n\n  if (disabled || loading) {\n    featureCls.push('cursor-not-allowed')\n  }\n\n  const cls = [...defaultCls, ...featureCls, className].join(' ')\n\n  return (\n    <button className={cls} disabled={isDisabled} onClick={onClick} {...rest}>\n      <div className={loading ? 'flex items-center justify-center' : ''}>\n        <span className=\"flex mr-2\">{loading && <Spinner className=\"w-4 h-4\" />}</span>\n        {children}\n      </div>\n    </button>\n  )\n}\n","import React, {useState} from 'react'\nimport {MdPerson} from 'react-icons/md'\nimport {Auth$, UserInfo} from '../../services/auth.service'\nimport {CProps} from '../../types'\nimport {Button} from '../Button'\n\ninterface AvatarProps {\n  user: UserInfo\n}\n\nexport const Avatar = ({user}: CProps<AvatarProps>) => {\n  const [visible, setVisible] = useState(false)\n\n  const onOpenMenu = () => setVisible(!visible)\n\n  const onLogout = async () => Auth$.signOut()\n\n  if (!user) {\n    return <div>Login</div>\n  }\n\n  return (\n    <>\n      <div\n        className=\"border cursor-pointer p-2 rounded-full text-white hover:bg-blue-800\"\n        onClick={onOpenMenu}\n      >\n        <MdPerson className=\"text-xl\" />\n      </div>\n\n      {visible && (\n        <div className=\"absolute bg-white content-between mr-2 mt-12 right-0 shadow-md top-0 w-64\">\n          <div className=\"flex p-3\">\n            <MdPerson className=\"text-3xl text-6xl text-gray-800\" />\n\n            <div className=\"ml-4\">\n              <h1 className=\"font-bold\">{user.username}</h1>\n              <h2 className=\"text-base\">{user.attributes.email}</h2>\n            </div>\n          </div>\n\n          <div className=\"bg-gray-200 border-t p-2 text-right\">\n            <Button primary onClick={onLogout}>\n              Logout\n            </Button>\n          </div>\n        </div>\n      )}\n    </>\n  )\n}\n","import React from 'react'\nimport {MdCloud} from 'react-icons/md'\nimport {Link} from 'react-router-dom'\nimport {CProps} from '../../types'\n\ninterface LogoProps {\n  reverse?: boolean\n}\n\nexport const Logo = ({reverse = false}: CProps<LogoProps>) => {\n  const cls = [\n    'flex items-center text-3xl cursor-pointer',\n    reverse ? 'text-white' : 'text-blue-500'\n  ].join(' ')\n\n  return (\n    <Link to=\"/\">\n      <h1 className={cls}>\n        <MdCloud className=\"mr-2\" />\n        Cloud dashboard\n      </h1>\n    </Link>\n  )\n}\n","export const CONFIG = {\n  cognito: {\n    REGION: 'ap-northeast-1',\n    USER_POOL_ID: 'ap-northeast-1_1ACiUyF1H',\n    APP_CLIENT_ID: '1rt35ctopf84fbh47lllf0gg5k'\n  },\n  apiGateway: {\n    REGION: 'ap-northeast-1',\n    URL: 'https://cqto1p9g0j.execute-api.ap-northeast-1.amazonaws.com',\n    ENV: 'prod'\n  }\n}\n","import {from, Observable, of, throwError} from 'rxjs'\nimport {map, switchMap, take} from 'rxjs/operators'\nimport {CONFIG} from '../config'\nimport {Auth$} from '../services/auth.service'\nimport {Err} from './go'\n\nexport function errorHandler(e: any) {\n  console.error(e)\n\n  return of(e instanceof Err ? e : new Err(e))\n}\n\nexport function errorHandlerWithDefaultValue(defaultValue: any) {\n  return (e: any) => {\n    console.error(e)\n\n    return of(defaultValue)\n  }\n}\n\nexport function genURL(\n  path: string,\n  env: string = CONFIG.apiGateway.ENV,\n  base: string = CONFIG.apiGateway.URL\n) {\n  return new URL(`${env}/${path}`, base).href\n}\n\nexport function request(path: string, opt: RequestInit = {}) {\n  const token$ = Auth$.getSession().pipe(\n    map(session => session.getIdToken().getJwtToken()),\n    take(1)\n  )\n\n  const opt$: Observable<RequestInit> = token$.pipe(\n    map(token => {\n      const {headers, ...restOpts} = opt\n\n      const headersWithToken = new Headers(headers)\n      headersWithToken.append('Authorization', token)\n\n      return {\n        url: genURL(path),\n        headers: {Authorization: token},\n        ...restOpts\n      }\n    })\n  )\n\n  return opt$.pipe(\n    switchMap(opt => from(fetch(genURL(path), opt))),\n    switchMap(res => {\n      if (res.status >= 400) {\n        return from(res.json()).pipe(switchMap(e => throwError(new Err(e))))\n      }\n\n      return from(res.json())\n    })\n  )\n}\n","import React, {ChangeEvent} from 'react'\nimport {MdAddCircle} from 'react-icons/md'\nimport {useHistory, useRouteMatch} from 'react-router-dom'\nimport {useCurrentUser} from '../../shared/useCurrentUser'\nimport {useProjectId} from '../../shared/useProjectId'\nimport {CProps} from '../../types'\nimport {Avatar} from '../Avatar'\nimport {Button} from '../Button'\nimport {Logo} from '../Logo'\nimport {useProjects} from './AppBar.service'\n\ninterface AppBarProps {}\n\nexport const AppBar = ({children}: CProps<AppBarProps>) => {\n  const projects = useProjects()\n  const projectId = useProjectId(projects)\n  const {user} = useCurrentUser()\n  const history = useHistory()\n  const match = useRouteMatch()\n\n  const isNewProjectPath = match.path === '/new-project'\n\n  const onCreateProject = () => history.push('/new-project')\n\n  const selectedProjectChange = (e: ChangeEvent<HTMLSelectElement>) => {\n    if (!e.target.value) {\n      return\n    }\n\n    history.push('/dashboard?projectId=' + e.target.value)\n  }\n\n  const isLoggedIn = user !== null\n\n  return (\n    <div>\n      <div className=\"py-1 px-4 shadow bg-blue-500 flex justify-between items-center fixed w-full\">\n        <div className=\"flex items-center\">\n          <Logo reverse />\n\n          {projects.length > 0 && (\n            <div className=\"ml-6\">\n              <select\n                className=\"bg-blue-500 border h-8 px-2 rounded text-white w-48\"\n                value={projectId}\n                onChange={selectedProjectChange}\n              >\n                {projects.map(project => (\n                  <option key={project.id} value={project.id}>\n                    {project.projectName}\n                  </option>\n                ))}\n              </select>\n            </div>\n          )}\n        </div>\n\n        {isLoggedIn && (\n          <div className=\"flex items-center\">\n            {!isNewProjectPath && (\n              <Button\n                primary\n                className=\"mr-8 text-white\"\n                onClick={onCreateProject}\n              >\n                <div className=\"flex items-center\">\n                  <MdAddCircle className=\"mr-1\" />\n                  New project\n                </div>\n              </Button>\n            )}\n\n            {user && <Avatar user={user} />}\n          </div>\n        )}\n      </div>\n\n      <div className=\"overflow-y-auto pt-12\">{children}</div>\n    </div>\n  )\n}\n","import {useEffect, useState} from 'react'\nimport {Project, Projects$} from '../../services/projects.service'\n\nexport function useProjects() {\n  const [projects, setProjects] = useState<Project[]>([])\n\n  useEffect(() => {\n    const sub = Projects$.get().subscribe(projects => setProjects(projects))\n\n    return () => sub.unsubscribe()\n  }, [])\n\n  return projects\n}\n\nexport function useDefaultProjectId(id: string, projects: Project[]) {\n  if (id) {\n    return id\n  }\n\n  return projects[0]?.id\n}\n","export function classnames(\n  ...cls: Array<string | string[] | {[key: string]: boolean}>\n): string {\n  const args = Array.from(cls)\n\n  const r: string[] = []\n\n  composeCls(args, r)\n\n  return r.join(' ')\n}\n\nfunction composeCls(args: any[], result: string[]) {\n  if (args.length === 0) {\n    return\n  }\n\n  const [cls, ...restArgs] = args\n\n  if (typeof cls === 'string') {\n    result.push(cls)\n  } else if (Array.isArray(cls)) {\n    const c = cls.filter(Boolean).join(' ')\n    result.push(c)\n  } else {\n    const c = Object.entries<boolean>(cls)\n      .reduce((acc, [key, val]) => [...acc, val ? key : ''], [] as any)\n      .filter(Boolean)\n      .join(' ')\n\n    result.push(c)\n  }\n\n  composeCls(restArgs, result)\n}\n","import React from 'react'\nimport {MdArrowForward} from 'react-icons/md'\nimport {CProps} from '../../types'\n\ninterface CardFooterProps {\n  link?: string\n}\n\nexport const CardFooter = ({link, children}: CProps<CardFooterProps>) => {\n  return (\n    <a\n      href={link}\n      className=\"block border-t h-full w-full p-4 hover:bg-gray-100 transition-colors duration-300 ease-in-out\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      <div className=\"flex items-center\">\n        <MdArrowForward className=\"mr-4 text-2xl\" />\n        {children}\n      </div>\n    </a>\n  )\n}\n","import React, {MouseEventHandler, useEffect, useRef} from 'react'\nimport {WidgetConfig} from '../../services/projects.service'\nimport {classnames} from '../../shared/classnames'\nimport {noop} from '../../shared/noop'\nimport {CProps, Pos} from '../../types'\nimport {usePosition} from './Card.service'\nimport {CardFooter} from './CardFooter'\n\ninterface CardProps {\n  title: string\n  footer?: WidgetConfig\n  isDragging?: boolean\n  collapse?: boolean\n  onPositionChange?: (position: Pos) => void\n  onMouseDown?: MouseEventHandler<HTMLDivElement>\n}\n\nconst Placeholder = () => (\n  <div className=\"border bg-white w-full h-16 shadow-inner mb-3\" />\n)\n\nexport const Card = React.memo(\n  ({\n    title,\n    footer,\n    isDragging = false,\n    collapse = false,\n    className = '',\n    onPositionChange = noop,\n    onMouseDown = noop,\n    children\n  }: CProps<CardProps>) => {\n    const ref = useRef<HTMLDivElement>(null)\n    const position = usePosition(ref, isDragging)\n\n    useEffect(() => {\n      onPositionChange(position)\n    }, [position])\n\n    return (\n      <>\n        {isDragging && <Placeholder />}\n\n        <div\n          ref={ref}\n          className={classnames(\n            'bg-white duration-300 ease-in-out hover:shadow-lg overflow-hidden shadow-md transition-shadow select-none',\n            className,\n            {'absolute w-1/3 z-10 opacity-75': isDragging}\n          )}\n        >\n          <div\n            onMouseDown={onMouseDown}\n            className={classnames(\n              'text-2xl p-4 h-16 overflow-hidden',\n              isDragging ? 'cursor-grabbing' : 'cursor-grab'\n            )}\n          >\n            {title}\n          </div>\n\n          {!collapse && (\n            <>\n              <div className=\"px-4 pb-4\">{children}</div>\n\n              {footer && (\n                <CardFooter link={footer.link}>{footer.name}</CardFooter>\n              )}\n            </>\n          )}\n        </div>\n      </>\n    )\n  }\n)\n","import {MouseEvent, RefObject, useLayoutEffect, useState} from 'react'\nimport {Pos} from '../../types'\n\nexport function usePosition(\n  ref: RefObject<HTMLDivElement>,\n  isDragging: boolean\n): Pos {\n  const [position, setPosition] = useState<Pos>([0, 0])\n\n  useLayoutEffect(() => {\n    if (!ref.current || !isDragging) {\n      return\n    }\n\n    const move = (e: MouseEvent<any>) => {\n      if (!ref.current || !isDragging) {\n        return\n      }\n\n      const el = ref.current\n\n      const x = el.offsetWidth >> 1\n      const y = el.offsetHeight >> 1\n\n      el.style.left = e.clientX - x + 'px'\n      el.style.top = e.clientY - y + 'px'\n\n      setPosition([e.clientX, e.clientY])\n    }\n\n    document.addEventListener('mousemove', move as any)\n\n    return () => document.removeEventListener('mousemove', move as any)\n  }, [ref, isDragging])\n\n  return position\n}\n","import React, {useEffect, useRef} from 'react'\nimport {classnames} from '../../shared/classnames'\nimport {CProps, Pos} from '../../types'\nimport {useActive} from './DetectionArea.service'\n\ninterface DetectionAreaProps {\n  index: Pos\n  position: Pos\n  onChange: (index: Pos) => void\n}\n\nexport function DetectionArea({\n  index,\n  position,\n  onChange\n}: CProps<DetectionAreaProps>) {\n  const ref = useRef<HTMLDivElement>(null)\n\n  const active = useActive(ref, position)\n\n  useEffect(() => {\n    // only pass the active one index\n    if (active) {\n      onChange(index)\n    }\n  }, [active])\n\n  return (\n    <div\n      ref={ref}\n      className={classnames(\n        'w-full h-1 mb-3',\n        active ? 'bg-blue-500' : 'bg-gray-200'\n      )}\n    />\n  )\n}\n","import {RefObject, useMemo} from 'react'\nimport {Pos} from '../../types'\n\nconst EDGE_DETECTION_V = 33 + 11\nconst EDGE_DETECTION_H = 8\n\nexport function useActive(\n  ref: RefObject<HTMLDivElement>,\n  position: Pos\n): boolean {\n  return useMemo<boolean>(() => {\n    if (!ref.current) {\n      return false\n    }\n\n    const [x, y] = position\n\n    const el = ref.current\n    const offsetTop = el.offsetTop\n    const offsetLeft = el.offsetLeft\n    const width = el.offsetWidth\n    const height = el.offsetHeight\n\n    // check width\n    const left = offsetLeft - EDGE_DETECTION_H\n    const right = offsetLeft + width + EDGE_DETECTION_H\n    let inHorizontalRange = left <= x && x < right\n\n    // check height\n    const top = offsetTop - EDGE_DETECTION_V\n    const bottom = offsetTop + height + EDGE_DETECTION_V\n    let inVerticalRange = top <= y && y < bottom\n\n    return inHorizontalRange && inVerticalRange\n  }, [ref, position])\n}\n","import React, {InputHTMLAttributes} from 'react'\n\ninterface TextInputProps<T> extends InputHTMLAttributes<T> {\n  label?: string\n}\n\nexport const TextInput = ({\n  label,\n  className = '',\n  ...props\n}: TextInputProps<any>) => {\n  const cls = [\n    'block w-full h-12 py-3 border-b text-gray-600 border-blue-500 outline-none focus:border-blue-800 transition-colors duration-300 ease-in-out',\n    className\n  ].join(' ')\n\n  return (\n    <div>\n      {label && <label className=\"text-blue-500 block\">{label}</label>}\n\n      <input className={cls} {...props} />\n    </div>\n  )\n}\n","import React, {SyntheticEvent, useState} from 'react'\nimport {useHistory} from 'react-router-dom'\nimport {Auth$} from '../../services/auth.service'\nimport {Button} from '../Button'\nimport {TextInput} from '../TextInput'\n\nenum Type {\n  Login,\n  Register,\n  ConfirmSingUp\n}\n\nexport const LoginForm = () => {\n  const [type, setType] = useState(Type.Login)\n  const [username, setUsername] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [isSubmitting, setSubmitting] = useState(false)\n  const [code, setCode] = useState('')\n  const history = useHistory()\n\n  const onSignIn = async () => {\n    if (!username || !password) {\n      return alert(\"You haven't finished all the fields.\")\n    }\n\n    setSubmitting(true)\n    const userInfo = await Auth$.signIn(username, password)\n    setSubmitting(false)\n\n    if (userInfo) {\n      history.push('/')\n    }\n  }\n\n  const onSignUp = async () => {\n    if (!username || !password || !email) {\n      return alert(\"You haven't finished all the fields.\")\n    }\n\n    setSubmitting(true)\n    const isOk = await Auth$.signUp(username, password, email)\n    setSubmitting(false)\n\n    if (!isOk) {\n      return alert('Sign-up failed, please try other username or try latter.')\n    }\n\n    setType(Type.ConfirmSingUp)\n  }\n\n  const onConfirmed = async () => {\n    if (!code) {\n      return alert('Please enter your verify code.')\n    }\n\n    setSubmitting(true)\n    const isOk = await Auth$.confirmSignUp(username, code)\n    setSubmitting(false)\n\n    if (!isOk) {\n      alert('Confirmed failed. Please check if you have input the right code.')\n    }\n\n    alert('You have confirmed your account.')\n    setType(Type.Login)\n\n    setUsername('')\n    setPassword('')\n  }\n\n  const onSubmit = (e: SyntheticEvent) => {\n    e.preventDefault()\n\n    switch (type) {\n      case Type.Login:\n        return onSignIn()\n      case Type.Register:\n        return onSignUp()\n      case Type.ConfirmSingUp:\n        return onConfirmed()\n    }\n  }\n\n  return (\n    <div className=\"p-4\">\n      <form onSubmit={onSubmit}>\n        {type !== Type.ConfirmSingUp && (\n          <>\n            <TextInput\n              className=\"block w-full mb-4\"\n              type=\"username\"\n              placeholder=\"Username\"\n              value={username}\n              onChange={e => setUsername(e.target.value)}\n            />\n\n            <TextInput\n              className=\"block w-full mb-4\"\n              placeholder=\"Password\"\n              type=\"password\"\n              value={password}\n              onChange={e => setPassword(e.target.value)}\n            />\n            {type === Type.Register && (\n              <div className=\"text-gray-600 text-sm\">\n                Password pattern: Passw0rd!\n              </div>\n            )}\n\n            {type === Type.Register && (\n              <TextInput\n                className=\"block w-full\"\n                placeholder=\"Email\"\n                type=\"email\"\n                value={email}\n                onChange={e => setEmail(e.target.value)}\n              />\n            )}\n          </>\n        )}\n\n        {type === Type.ConfirmSingUp && (\n          <>\n            <h1 className=\"font-hairline mb-8 text-2xl\">\n              Code has sent to your mailbox.\n            </h1>\n\n            <TextInput\n              className=\"block w-full\"\n              placeholder=\"Code\"\n              type=\"text\"\n              value={code}\n              onChange={e => setCode(e.target.value)}\n            />\n\n            <div className=\"text-gray-600 text-sm\">\n              If you cannot get the email, please check your junk.\n            </div>\n          </>\n        )}\n\n        <Button\n          type=\"submit\"\n          className=\"mt-10\"\n          primary\n          block\n          loading={isSubmitting}\n          onClick={onSubmit}\n        >\n          {type === Type.ConfirmSingUp\n            ? 'Confirmed'\n            : type === Type.Login\n            ? 'Sign in'\n            : 'Sign up'}\n        </Button>\n      </form>\n\n      <div className=\"text-right mt-8 text-gray-600\">\n        {type === Type.Login ? (\n          <div>\n            Haven't got an account?\n            <Button onClick={() => setType(Type.Register)}>Sign Up</Button>\n          </div>\n        ) : (\n          <div>\n            Click here to\n            <Button onClick={() => setType(Type.Login)}>Sign In</Button>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React, {ChangeEvent} from 'react'\nimport {CProps, WidgetProps} from '../../types'\nimport {TextInput} from '../TextInput'\n\ninterface APIWidgetProps extends WidgetProps {}\n\nexport const APIWidget = ({\n  id,\n  edit,\n  data,\n  onChange\n}: CProps<APIWidgetProps>) => {\n  if (!data) {\n    return <div className=\"text-gray-700\">API is not available now.</div>\n  }\n\n  const onDataSourceChange = (e: ChangeEvent<HTMLInputElement>) =>\n    onChange({id, data: {source: e.target.value}})\n\n  if (edit) {\n    return (\n      <TextInput\n        label=\"API Source\"\n        value={data.source}\n        onChange={onDataSourceChange}\n      />\n    )\n  }\n\n  return (\n    <div>\n      <div>API Source</div>\n      <div className=\"text-gray-700\">{data.source}</div>\n    </div>\n  )\n}\n","import React from 'react'\nimport {Project} from '../../services/projects.service'\nimport {CProps, WidgetProps} from '../../types'\n\ninterface ProjectInfoProps extends WidgetProps {\n  data: Project\n}\n\nexport const ProjectInfo = ({data}: CProps<ProjectInfoProps>) => {\n  if (!data) {\n    return (\n      <div className=\"text-gray-700\">Project info is not available now.</div>\n    )\n  }\n\n  return (\n    <div>\n      <div className=\"mb-3\">\n        <h3>Project name</h3>\n        <div className=\"text-gray-600\">{data.projectName}</div>\n      </div>\n\n      <div className=\"mb-3\">\n        <h3>Project ID</h3>\n        <div className=\"text-gray-600\">{data.id}</div>\n      </div>\n\n      <div>\n        <h3>Created at</h3>\n        <div className=\"text-gray-600\">\n          {new Date(data.createdAt).toDateString()}\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport {CProps, WidgetProps} from '../../types'\n\ninterface ResourceWidget extends WidgetProps {}\n\nexport const ResourceWidget = (props: CProps<ResourceWidget>) => {\n  return <div className=\"text-gray-600\">No more resources for now.</div>\n}\n","import React, {ChangeEvent} from 'react'\nimport {noop} from '../../shared/noop'\nimport {CProps, WidgetProps} from '../../types'\nimport {TextInput} from '../TextInput'\n\ninterface SQLWidgetProps extends WidgetProps {}\n\nexport const SQLWidget = ({\n  id,\n  edit = false,\n  data,\n  onChange = noop\n}: CProps<SQLWidgetProps>) => {\n  if (!data) {\n    return <div className=\"text-gray-700\">SQL is not available now.</div>\n  }\n\n  const onDataSourceChange = (e: ChangeEvent<HTMLInputElement>) =>\n    onChange({id, data: {source: e.target.value}})\n\n  if (edit) {\n    return (\n      <TextInput\n        label=\"SQL Source\"\n        value={data.source}\n        onChange={onDataSourceChange}\n      />\n    )\n  }\n\n  return (\n    <div>\n      <div>SQL Source</div>\n      <div className=\"text-gray-700\">{data.source}</div>\n    </div>\n  )\n}\n","import React from 'react'\nimport {APIWidget} from '../../components/APIWidget'\nimport {ProjectInfo} from '../../components/ProjectInfo'\nimport {ResourceWidget} from '../../components/ResourceWidget'\nimport {SQLWidget} from '../../components/SQLWidget'\nimport {WidgetTypes} from '../../services/projects.service'\nimport {CProps, WidgetProps} from '../../types'\n\ninterface WidgetSwitcherProps extends WidgetProps {\n  type: WidgetTypes\n}\n\nexport const WidgetSwitcher = ({\n  id,\n  edit,\n  type,\n  data,\n  onChange\n}: CProps<WidgetSwitcherProps>) => {\n  let View = null\n\n  switch (type) {\n    case WidgetTypes.Resource:\n      View = ResourceWidget\n      break\n    case WidgetTypes.ProjectInfo:\n      View = ProjectInfo\n      break\n    case WidgetTypes.API:\n      View = APIWidget\n      break\n    case WidgetTypes.SQL:\n      View = SQLWidget\n      break\n    default:\n      return null\n  }\n\n  return <View id={id} edit={edit} data={data} onChange={onChange}/>\n}\n","import React, {Fragment, MouseEvent, useCallback, useState} from 'react'\nimport {AppBar} from '../../components/AppBar'\nimport {Button} from '../../components/Button'\nimport {Card} from '../../components/Card'\nimport {DetectionArea} from '../../components/DetectionArea'\nimport {Spinner} from '../../components/Spinner'\nimport {Projects$, useLoadingProjects} from '../../services/projects.service'\nimport {useProjectId} from '../../shared/useProjectId'\nimport {Pos} from '../../types'\nimport {\n  exchange,\n  isEqual,\n  OperateItemIndex,\n  useListenMouseUpEvent,\n  useProject,\n  useResources\n} from './Dashboard.service'\nimport {WidgetSwitcher} from './WidgetSwitcher'\n\nexport const Dashboard = () => {\n  const loading = useLoadingProjects()\n  const projectId = useProjectId()\n  const project = useProject(projectId)\n  const [isDragging, setDragging] = useState(false)\n  const [operateItemIndex, setOperateItemIndex] = useState<OperateItemIndex>(\n    null\n  )\n  const [position, setPosition] = useState<Pos>([0, 0])\n  const [targetIndex, setTargetIndex] = useState<OperateItemIndex>(null)\n  const [resources, setResources] = useResources(project)\n  const [edit, setEdit] = useState(false)\n\n  const cancelDragging = useCallback(() => {\n    setDragging(false)\n\n    if (!operateItemIndex || !targetIndex) {\n      return\n    }\n\n    const newResources = exchange(resources, operateItemIndex, targetIndex)\n\n    setResources(newResources)\n    setOperateItemIndex(null)\n    setTargetIndex(null)\n\n    Projects$.updateById(projectId, newResources).subscribe({\n      error: e => console.error('Update project resources failed.', e)\n    })\n  }, [\n    operateItemIndex,\n    targetIndex,\n    resources,\n    setDragging,\n    setResources,\n    setOperateItemIndex,\n    setTargetIndex\n  ])\n\n  useListenMouseUpEvent(cancelDragging)\n\n  const onPositionChange = (position: Pos) => setPosition(position)\n\n  const onMouseDown = (e: MouseEvent<HTMLDivElement>, index: Pos) => {\n    setDragging(true)\n    setOperateItemIndex(index)\n  }\n\n  const onIndexChange = (index: Pos) => setTargetIndex(index)\n\n  const onEdit = () => setEdit(true)\n\n  const onSave = () => {\n    setEdit(false)\n\n    Projects$.updateById(projectId, resources).subscribe(\n      () => console.log('Saved successfully.'),\n      e => console.error('Save failed.')\n    )\n  }\n\n  const onDataChange = ({id, data}: {id: string; data: any}) => {\n    const newResources = resources.slice().map(resource =>\n      resource.map(r => {\n        if (r.id === id) {\n          return {...r, data}\n        }\n\n        return r\n      })\n    )\n\n    setResources(newResources)\n  }\n\n  return (\n    <AppBar>\n      {loading ? (\n        <div className=\"flex justify-center mt-40 h-full w-full\">\n          <Spinner className=\"w-16 h-16\"/>\n        </div>\n      ) : (\n        <>\n          {project?.projectName && (\n            <div className=\"flex justify-between border-b p-4 \">\n              <div className=\"text-3xl\">{project.projectName}</div>\n\n              <Button onClick={edit ? onSave : onEdit}>\n                {edit ? 'Save' : 'Customize'}\n              </Button>\n            </div>\n          )}\n\n          <div className=\"px-8 py-6\">\n            <div className=\"flex\">\n              {resources.map((col, colIndex) => (\n                <div key={colIndex} className=\"flex-1 px-2\">\n                  {isDragging && (\n                    <DetectionArea\n                      index={[colIndex, 0]}\n                      position={position}\n                      onChange={onIndexChange}\n                    />\n                  )}\n\n                  {col.map((item, index: number) => (\n                    <Fragment key={item.id}>\n                      <Card\n                        className=\"mb-3\"\n                        isDragging={\n                          isDragging &&\n                          isEqual(operateItemIndex, [colIndex, index])\n                        }\n                        collapse={isDragging}\n                        title={item.title}\n                        footer={item.config}\n                        onMouseDown={e => onMouseDown(e, [colIndex, index])}\n                        onPositionChange={onPositionChange}\n                      >\n                        <WidgetSwitcher\n                          id={item.id}\n                          edit={edit}\n                          type={item.type}\n                          data={item.data}\n                          onChange={onDataChange}\n                        />\n                      </Card>\n\n                      {isDragging && (\n                        <DetectionArea\n                          index={[colIndex, index + 1]}\n                          position={position}\n                          onChange={onIndexChange}\n                        />\n                      )}\n                    </Fragment>\n                  ))}\n                </div>\n              ))}\n            </div>\n          </div>\n        </>\n      )}\n    </AppBar>\n  )\n}\n","import {useEffect, useLayoutEffect, useState} from 'react'\nimport {\n  Project,\n  Projects$,\n  WidgetsLayout\n} from '../../services/projects.service'\nimport {Pos} from '../../types'\n\nexport type OperateItemIndex = Pos | null\n\nexport function useProject(id: string): Project | undefined {\n  const [project, setProject] = useState<Project>()\n\n  useEffect(() => {\n    const sub = Projects$.getById(id).subscribe(p => setProject(p))\n\n    return () => sub.unsubscribe()\n  }, [id])\n\n  return project\n}\n\nexport function exchange<T>(\n  list: Array<T[]>,\n  srcIndex: OperateItemIndex,\n  targetIndex: OperateItemIndex\n): Array<T[]> {\n  if (!srcIndex || !targetIndex) {\n    return list\n  }\n\n  const listCopy = list.slice()\n\n  const [srcCol, srcIdx] = srcIndex\n  const [targetCol, targetIdx] = targetIndex\n\n  if (srcCol === targetCol) {\n    const col = listCopy[srcCol].slice()\n    const item = col[srcIdx]\n    col.splice(srcIdx, 1)\n    col.splice(targetIdx, 0, item)\n\n    listCopy[srcCol] = col\n  } else {\n    const srcCols = listCopy[srcCol].slice()\n    const item = srcCols[srcIdx]\n\n    const targetCols = listCopy[targetCol].slice()\n\n    srcCols.splice(srcIdx, 1)\n    targetCols.splice(targetIdx, 0, item)\n\n    listCopy[srcCol] = srcCols\n    listCopy[targetCol] = targetCols\n  }\n\n  return listCopy\n}\n\nexport function isEqual(a: OperateItemIndex, b: Pos): boolean {\n  if (a === null) {\n    return false\n  }\n\n  return a[0] === b[0] && a[1] === b[1]\n}\n\nexport function useListenMouseUpEvent(cb: Function) {\n  useLayoutEffect(() => {\n    document.addEventListener('mouseup', cb as any)\n\n    return () => document.removeEventListener('mouseup', cb as any)\n  }, [cb])\n}\n\nexport function useResources(project?: Project): [WidgetsLayout, Function] {\n  const [resources, setResources] = useState(project?.resources || [])\n\n  useEffect(() => {\n    setResources(project?.resources || [])\n  }, [project])\n\n  return [resources, setResources]\n}\n","import React from 'react'\nimport {LoginForm} from '../../components/LoginForm'\nimport {Logo} from '../../components/Logo'\n\nexport const Login = () => {\n  return (\n    <div>\n      <div className=\"px-4 py-1\">\n        <Logo />\n      </div>\n\n      <div className=\"lg:w-1/3 md:w-1/2 w-11/12 mt-48 mx-auto shadow\">\n        <LoginForm />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport {CProps} from '../../types'\n\nexport const Alert = ({className = '', children}: CProps<any>) => {\n  const cls = [\n    'p-4 border border-red-300 bg-red-200 text-red-700 rounded',\n    className\n  ].join(' ')\n\n  return <div className={cls}>{children}</div>\n}\n","import React, {SyntheticEvent, useState} from 'react'\nimport {useHistory} from 'react-router-dom'\nimport {Alert} from '../../components/Alert'\nimport {AppBar} from '../../components/AppBar'\nimport {Button} from '../../components/Button'\nimport {TextInput} from '../../components/TextInput'\nimport {Projects$} from '../../services/projects.service'\nimport {Err} from '../../shared/go'\n\nexport const NewProject = () => {\n  const [projectName, setProjectName] = useState('')\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState(false)\n  const [errMsg, setErrMsg] = useState('')\n  const history = useHistory()\n\n  const onSubmit = (e: SyntheticEvent) => {\n    e.preventDefault()\n\n    if (!projectName || !projectName.trim()) {\n      return\n    }\n\n    setLoading(true)\n    Projects$.create(projectName).subscribe(res => {\n      setLoading(false)\n\n      if (res instanceof Err) {\n        setErrMsg(res.e.msg || 'Create project failed!')\n        setError(true)\n        return\n      }\n\n      setError(false)\n      setErrMsg('')\n      history.push(`/dashboard?projectId=${res.id}`)\n    })\n  }\n\n  return (\n    <AppBar>\n      <div>\n        <h1 className=\"text-2xl border-b p-4\">New project</h1>\n\n        <div className=\"p-4\">\n          {error && <Alert className=\"mb-4\">{errMsg}</Alert>}\n\n          <form onSubmit={onSubmit}>\n            <div className=\"w-1/3\">\n              <TextInput\n                label=\"Project name\"\n                placeholder=\"Project name\"\n                value={projectName}\n                onChange={e => setProjectName(e.target.value)}\n              />\n            </div>\n\n            <div className=\"flex items-center mt-8\">\n              <Button\n                type=\"submit\"\n                className=\"mr-4\"\n                primary\n                loading={loading}\n                onClick={onSubmit}\n              >\n                Create\n              </Button>\n\n              <Button onClick={history.goBack}>Cancel</Button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </AppBar>\n  )\n}\n","import React from 'react'\nimport {BrowserRouter, Redirect, Route, Switch} from 'react-router-dom'\nimport {Guard} from './components/Guard'\nimport {Launch} from './components/Launch'\nimport {Dashboard} from './pages/Dashboard'\nimport {Login} from './pages/Login'\nimport {NewProject} from './pages/NewProject'\nimport {useAuthConfig} from './shared/useAuthConfig'\nimport {useCurrentUser} from './shared/useCurrentUser'\n\nexport function App() {\n  useAuthConfig()\n  const {user, loading} = useCurrentUser()\n\n  const guard = () => Boolean(user)\n\n  if (loading) {\n    return (\n      <div className=\"absolute w-full h-full\">\n        <Launch />\n      </div>\n    )\n  }\n\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\">\n          <Redirect to=\"/dashboard\" />\n        </Route>\n        <Guard guard={guard} path=\"/dashboard\">\n          <Dashboard />\n        </Guard>\n        <Guard guard={guard} path=\"/new-project\">\n          <NewProject />\n        </Guard>\n        <Route path=\"/login\">\n          <Login />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  )\n}\n","import Amplify from 'aws-amplify'\nimport {useEffect} from 'react'\nimport {CONFIG} from '../config'\n\nexport function useAuthConfig() {\n  useEffect(() => {\n    Amplify.configure({\n      Auth: {\n        mandatorySignIn: true,\n        region: CONFIG.cognito.REGION,\n        userPoolId: CONFIG.cognito.USER_POOL_ID,\n        userPoolWebClientId: CONFIG.cognito.APP_CLIENT_ID\n      }\n    })\n  }, [])\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {App} from './App'\nimport * as serviceWorker from './serviceWorker'\nimport './tailwind.output.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\nserviceWorker.unregister()\n"],"sourceRoot":""}